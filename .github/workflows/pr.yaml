name: Pull Request Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, closed]
    branches: [ main ]

defaults:
  run:
    shell: bash

env:
  DOMAIN_NAME: "pr-${{ github.event.number }}.website-preview.rm3l.org"
  ODO_DISABLE_TELEMETRY: "true"
  PODMAN_CMD: "docker"
  NAMESPACE: "rm3l-org-pr-${{ github.event.number }}"
  PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  PR_NUMBER: ${{ github.event.number }}

jobs:
  deploy-preview:
    if: ${{ github.event.pull_request.state == 'open' }}
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install asdf dependencies
        uses: asdf-vm/actions/install@v1

      - run: |
          yq -i '.metadata.name = "rm3l-org-pr-${{ env.PR_NUMBER }}"' devfile.yaml

      - name: Generate Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Create and set namespace
        run: |
          if odo list namespaces | grep "$NAMESPACE"; then
            echo "Namespace $NAMESPACE already exists."
          else
            echo "Namespace $NAMESPACE *not* found => creating it."
            odo create namespace "$NAMESPACE"
          fi
          odo set namespace "$NAMESPACE"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Create DNS record if needed
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          .cloudflare/scripts/add_dns_record.sh "$DOMAIN_NAME" CNAME "${{ secrets.CLOUDFLARE_DNS_CNAME_TARGET }}"

      - name: Deploy locally with odo
        run: |
          odo deploy -v 4 \
            --var CONTAINER_IMAGE=docker.io/rm3l/rm3l.org \
            --var CONTAINER_IMAGE_TAG=pr-"${PR_NUMBER}-${{ env.PR_HEAD_SHA }}" \
            --var DEPLOY_CERTMANAGER_CLUSTERISSUER="${{ secrets.CERTMANAGER_CLUSTERISSUER_PREVIEW_URLS }}" \
            --var DEPLOY_INGRESS_CLASS=traefik \
            --var DOMAIN_NAME \
            --var RESOURCE_NAME="rm3l-org-pr-${PR_NUMBER}"

      - name: Test access
        run: |
          wget --no-check-certificate \
            --tries=20 \
            --retry-on-host-error \
            --retry-on-http-error=404,503 \
            -S \
            -O - \
            "https://$DOMAIN_NAME/" || exit 1

      - name: Add PR comment with preview URL
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### <span aria-hidden="true">âœ…</span> Deploy Preview ready!

            |  Name | Link |
            |---------------------------------|------------------------|
            |<span aria-hidden="true">ðŸ”¨</span> Latest commit | ${{ env.PR_HEAD_SHA }} |
            |<span aria-hidden="true">ðŸ˜Ž</span> Deploy Preview | [https://${{ env.DOMAIN_NAME }}/](https://${{ env.DOMAIN_NAME }}/) |
          comment_includes: 'Deploy Preview'
          pr_number: ${{ env.PR_NUMBER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          reactions: rocket

  delete_resources_for_pr:
    if: ${{ github.event.pull_request.state == 'closed' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Delete DNS record if needed
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          .cloudflare/scripts/delete_dns_record.sh "$DOMAIN_NAME"

      - name: Update PR comment about preview URL
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### <span aria-hidden="true">ðŸ”¨</span> Deploy Preview deleted!

            |  Name | Link |
            |---------------------------------|------------------------|
            |<span aria-hidden="true">ðŸ”¨</span> Latest commit | ${{ env.PR_HEAD_SHA }} |
            |<span aria-hidden="true">ðŸ˜Ž</span> Deploy Preview | ~[https://${{ env.DOMAIN_NAME }}/](https://${{ env.DOMAIN_NAME }}/)~ |
          comment_includes: 'Deploy Preview'
          pr_number: ${{ env.PR_NUMBER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          reactions: recycle

      - name: Install asdf dependencies
        uses: asdf-vm/actions/install@v1

      - run: |
          asdf global odo `grep odo .tool-versions | awk '{print $2}'`

      - name: Generate Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Delete component
        run: |
          mkdir -p /tmp && cd /tmp
          odo delete component \
            --namespace "$NAMESPACE" \
            --name "rm3l-org-pr-${PR_NUMBER}" \
            --platform cluster \
            --force \
            --wait=false

      - name: Delete namespace
        if: ${{ always() }}
        run: |
          odo delete namespace "$NAMESPACE" \
            --wait=false \
            --force \
          || echo "Could not delete namespace $NAMESPACE - please delete it manually!"

